{"version":3,"file":"static/js/44.e6a24a7c.chunk.js","mappings":"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","sources":["views/base/spinners/Spinners.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTab,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\nimport UserContext from 'src/UserContext'\nimport '../accordion/accordion-style.css'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Area } from 'recharts';\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\" style={{ backgroundColor: '#ffffff', padding: '10px', border: '1px solid #dddddd' }}>\n        <p className=\"label\">{`Date: ${label}`}</p>\n        <p className=\"intro\">{`Cost: ${payload[0].value} USD`}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nconst Spinners = () => {\n\n  const { userID } = useContext(UserContext)\n  const [data, setData] = useState([]);\n\n  let apiUrl = 'http://localhost:7070/billing/getbillingaws/' + userID\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(fetchedData => {\n        const chartData = fetchedData.map(item => {\n          return {\n            start: item.TimePeriod.Start,\n            end: item.TimePeriod.End,\n            cost: item.Total.UnblendedCost.Amount,\n            amount: item.Total.UnblendedCost.Amount,\n            unit: item.Total.UnblendedCost.Unit,\n          };\n        });\n        setData(chartData);\n      })\n      .catch(error => console.error('Error:', error));\n\n  }, []);\n\n  const tableData = data.map(item => ({\n    start: item.start,\n    end: item.end,\n    amount: item.amount,\n    unit: item.unit,\n  }));\n\n  const tableFields = [\n    { key: 'start', label: 'Start Date' },\n    { key: 'end', label: 'End Date' },\n    { key: 'amount', label: 'Amount' },\n    { key: 'unit', label: 'Unit' },\n  ];\n\n\n\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center' }}>Resource Billing</h2>\n      <h3 style={{ textAlign: 'center', color: '#888888',}}>Usage Cost</h3>\n      <ResponsiveContainer width='100%' height={500}>\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"start\" padding={{ left: 30, right: 30 }} tick={{ fontSize: 14, fill: '#605F5E' }} />\n          <YAxis tick={{ fontSize: 14, fill: '#605F5E' }} />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#8884d8\" strokeWidth={3} dot={{ r: 6 }} activeDot={{ r: 8 }} fill=\"#8884d8\" />\n          <Area type='monotone' dataKey='cost' stroke='#8884d8' fillOpacity={0.9} fill='#8884d8' />\n        </LineChart>\n      </ResponsiveContainer>\n      <CTable\n        items={tableData}\n        fields={tableFields}\n        striped\n        hover\n        caption=\"Chart Data\"\n        className=\"styled-table mt-5\"\n      >\n        <CTableHead>\n        <CTableRow>\n          <CTableHeaderCell scope=\"col\">Start Date</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">End Date</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Total Amount</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Price Unit</CTableHeaderCell>\n        </CTableRow>\n      </CTableHead>\n\n      </CTable>\n    </div>\n  )\n}\n\nexport default Spinners\n"],"names":["CustomTooltip","_ref","active","payload","label","length","_jsxs","className","style","backgroundColor","padding","border","children","_jsx","concat","value","userID","useContext","UserContext","_useState","useState","_useState2","_slicedToArray","data","setData","apiUrl","useEffect","fetch","then","response","json","fetchedData","chartData","map","item","start","TimePeriod","Start","end","End","cost","Total","UnblendedCost","Amount","amount","unit","Unit","catch","error","console","tableData","textAlign","color","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fontSize","fill","YAxis","Tooltip","content","Legend","verticalAlign","wrapperStyle","lineHeight","Line","type","stroke","strokeWidth","dot","r","activeDot","Area","fillOpacity","CTable","items","fields","key","striped","hover","caption","CTableHead","CTableRow","CTableHeaderCell","scope"],"sourceRoot":""}