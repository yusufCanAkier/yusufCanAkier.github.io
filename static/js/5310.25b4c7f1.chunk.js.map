{"version":3,"file":"static/js/5310.25b4c7f1.chunk.js","mappings":"iQA0BMA,EAAS,CACb,CAAEC,IAAK,aAAcC,MAAO,cAAeC,OAAQ,CAAEC,MAAO,QAC5D,CAAEH,IAAK,eAAgBC,MAAO,gBAAiBC,OAAQ,CAAEC,MAAO,QAChE,CAAEH,IAAK,gBAAiBC,MAAO,kBAAmBC,OAAQ,CAAEC,MAAO,QACnE,CAAEH,IAAK,QAASC,MAAO,QAASC,OAAQ,CAAEC,MAAO,SAiDnD,UA9Ca,WAEX,IAAQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OACRG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAChBI,EAAS,uCAAyCT,EAmBtD,OAjBAU,EAAAA,EAAAA,YAAU,WACRC,MAAMF,GACLG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAEJ,IAAMC,EAAcD,EAAYE,UAAUC,KAAI,SAAAC,GAC5C,MAA2B,KAAvBA,EAAKC,eACPC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYF,GAAI,IAAEC,cAAe,QAE5BD,CACT,IACAX,EAAQQ,EACV,IACCM,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,EAAM,GAEhD,GAAG,KAGDE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,MAAOpB,EACPZ,OAAQA,EACRiC,SAAO,EACPC,aAAc,EACdC,YAAU,EACVC,OAAK,EACLC,QAAM,EACNC,UAAU,eAAcC,UAExBT,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAD,UACTE,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAH,SAAA,EACRT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,iBAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,mBAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,qBAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,gBAKxC,C","sources":["views/base/carousels/Carousels.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTab,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell\n} from '@coreui/react'\nimport UserContext from 'src/UserContext'\nimport '../accordion/accordion-style.css'\n\n\nconst fields = [\n  { key: 'InstanceID', label: 'Instance ID', _style: { width: '25%'} },\n  { key: 'InstanceType', label: 'Instance Type', _style: { width: '25%'} },\n  { key: 'PublicDNSName', label: 'Public DNS Name', _style: { width: '25%'} },\n  { key: 'State', label: 'State', _style: { width: '25%'} },\n];\n\nconst Navs = () => {\n\n  const { userID } = useContext(UserContext)\n  const [data, setData] = useState([]);\n  let apiUrl = 'http://localhost:7070/vm/getlistaws/' + userID\n\n  useEffect(() => {\n    fetch(apiUrl)\n    .then(response => response.json())\n    .then(fetchedData => {\n      // PublicDNSName değeri boş olan kayıtların bu değerini 'N/A' yap\n      const updatedData = fetchedData.instances.map(item => {\n        if (item.PublicDNSName === '') {\n          return { ...item, PublicDNSName: 'N/A' };\n        }\n        return item;\n      });\n      setData(updatedData);\n    })\n    .catch(error => console.error('Error:', error));\n\n  }, []);\n\n  return (\n    <CTable\n      items={data}\n      fields={fields}\n      striped\n      itemsPerPage={5}\n      pagination\n      hover\n      sorter\n      className='styled-table'\n    >\n      <CTableHead>\n        <CTableRow>\n          <CTableHeaderCell scope=\"col\">Instance ID</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Instance Type</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Public DNS Name</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">State</CTableHeaderCell>\n        </CTableRow>\n      </CTableHead>\n    </CTable>\n  )\n}\n\nexport default Navs\n"],"names":["fields","key","label","_style","width","userID","useContext","UserContext","_useState","useState","_useState2","_slicedToArray","data","setData","apiUrl","useEffect","fetch","then","response","json","fetchedData","updatedData","instances","map","item","PublicDNSName","_objectSpread","catch","error","console","_jsx","CTable","items","striped","itemsPerPage","pagination","hover","sorter","className","children","CTableHead","_jsxs","CTableRow","CTableHeaderCell","scope"],"sourceRoot":""}