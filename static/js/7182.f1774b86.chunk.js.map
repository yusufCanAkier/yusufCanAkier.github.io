{"version":3,"file":"static/js/7182.f1774b86.chunk.js","mappings":"kQAkBMA,EAAS,CACb,CAAEC,IAAK,mBAAoBC,MAAO,oBAAqBC,OAAQ,CAAEC,MAAO,QACxE,CAAEH,IAAK,iBAAkBC,MAAO,kBAAmBC,OAAQ,CAAEC,MAAO,QACpE,CAAEH,IAAK,kBAAmBC,MAAO,iBAAkBC,OAAQ,CAAEC,MAAO,QACpE,CAAEH,IAAK,wBAAyBC,MAAO,0BAA2BC,OAAQ,CAAEC,MAAO,QACnF,CAAEH,IAAK,mBAAoBC,MAAO,kBAAmBC,OAAQ,CAAEC,MAAO,SA8DxE,UA3DkB,WAEhB,IAAQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OACRG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAChBI,EAAS,iDAAmDT,EAoBhE,OAlBAU,EAAAA,EAAAA,YAAU,WACRC,MAAMF,GACLG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAC9BF,MAAK,SAAAG,GAEJ,IAAMC,EAAgBD,EAAYE,KAAI,SAAAC,GAAI,MAAK,CAC7CC,iBAAkBD,EAAKC,iBACvBC,eAAgBF,EAAKE,eACrBC,gBAAiBH,EAAKG,gBACtBC,sBAAuBJ,EAAKI,sBAC5BC,iBAAkBL,EAAKK,iBACxB,IACDf,EAAQQ,EACV,IACCQ,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,EAAM,GAElD,GAAG,KAGDE,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,MAAOtB,EACPZ,OAAQA,EACRmC,SAAO,EACPC,aAAc,EACdC,YAAU,EACVC,OAAK,EACLC,QAAM,EACNC,UAAU,eAAcC,SAAA,EAExBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,UACTC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAAAH,SACPzC,EAAOsB,KAAI,SAAAuB,GAAK,OACfH,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,CAAiBC,MAAM,MAAMC,MAAOH,EAAM1C,OAAOsC,SAC/DI,EAAM3C,OADc2C,EAAM5C,IAEV,SAIzByC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SACR7B,EAAKU,KAAI,SAACC,EAAM2B,GAAK,OACpBlB,EAAAA,EAAAA,MAACY,EAAAA,GAAS,CAAAH,SAAA,EACRC,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAAV,SAAElB,EAAKC,oBACtBkB,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAAV,SAAElB,EAAKE,kBACtBiB,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAAV,SAAElB,EAAKG,mBACtBgB,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAAV,SAAElB,EAAKI,yBACtBe,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAAAV,SAAElB,EAAKK,qBALRsB,EAMJ,QAKtB,C","sources":["views/base/collapses/Collapses.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\nimport UserContext from 'src/UserContext'\nimport '../accordion/accordion-style.css'\n\nconst fields = [\n  { key: 'AvailabilityZone', label: 'Availability Zone', _style: { width: '20%'} },\n  { key: 'MasterUsername', label: 'Master Username', _style: { width: '20%'} },\n  { key: 'DBInstanceClass', label: 'Instance Class', _style: { width: '20%'} },\n  { key: 'BackupRetentionPeriod', label: 'Backup Retention Period', _style: { width: '20%'}},\n  { key: 'DBInstanceStatus', label: 'Database Status', _style: { width: '20%'}}\n];\n\nconst Collapses = () => {\n\n  const { userID } = useContext(UserContext)\n  const [data, setData] = useState([]);\n  let apiUrl = 'http://localhost:7070/database/getdatabaseaws/' + userID\n\n  useEffect(() => {\n    fetch(apiUrl)\n    .then(response => response.json())\n      .then(fetchedData => {\n        // Gelen veriyi düz bir yapıya dönüştür\n        const flattenedData = fetchedData.map(item => ({\n          AvailabilityZone: item.AvailabilityZone,\n          MasterUsername: item.MasterUsername,\n          DBInstanceClass: item.DBInstanceClass,\n          BackupRetentionPeriod: item.BackupRetentionPeriod,\n          DBInstanceStatus: item.DBInstanceStatus\n        }));\n        setData(flattenedData);\n      })\n      .catch(error => console.error('Error:', error));\n\n  }, []);\n\n  return (\n    <CTable\n      items={data}\n      fields={fields}\n      striped\n      itemsPerPage={5}\n      pagination\n      hover\n      sorter\n      className='styled-table'\n    >\n      <CTableHead>\n        <CTableRow>\n          {fields.map(field => (\n            <CTableHeaderCell key={field.key} scope=\"col\" style={field._style}>\n              {field.label}\n            </CTableHeaderCell>\n          ))}\n        </CTableRow>\n      </CTableHead>\n      <CTableBody>\n        {data.map((item, index) => (\n          <CTableRow key={index}>\n            <CTableDataCell>{item.AvailabilityZone}</CTableDataCell>\n            <CTableDataCell>{item.MasterUsername}</CTableDataCell>\n            <CTableDataCell>{item.DBInstanceClass}</CTableDataCell>\n            <CTableDataCell>{item.BackupRetentionPeriod}</CTableDataCell>\n            <CTableDataCell>{item.DBInstanceStatus}</CTableDataCell>\n          </CTableRow>\n        ))}\n      </CTableBody>\n    </CTable>\n  )\n}\n\nexport default Collapses\n"],"names":["fields","key","label","_style","width","userID","useContext","UserContext","_useState","useState","_useState2","_slicedToArray","data","setData","apiUrl","useEffect","fetch","then","response","json","fetchedData","flattenedData","map","item","AvailabilityZone","MasterUsername","DBInstanceClass","BackupRetentionPeriod","DBInstanceStatus","catch","error","console","_jsxs","CTable","items","striped","itemsPerPage","pagination","hover","sorter","className","children","_jsx","CTableHead","CTableRow","field","CTableHeaderCell","scope","style","CTableBody","index","CTableDataCell"],"sourceRoot":""}