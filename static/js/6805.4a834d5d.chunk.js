/*! For license information please see 6805.4a834d5d.chunk.js.LICENSE.txt */
(self.webpackChunk_coreui_coreui_free_react_admin_template=self.webpackChunk_coreui_coreui_free_react_admin_template||[]).push([[6805],{6805:function(e,n,t){"use strict";t.r(n);t(72791),t(81694);var r=t(78983),a=t(16143),o=t(80184);n.default=function(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)(r.xH,{className:"mb-4",children:[(0,o.jsxs)(r.bn,{children:["About Kubernetes Provider",(0,o.jsx)(a.cG,{href:""})]}),(0,o.jsx)(r.sl,{children:(0,o.jsx)(r.rb,{children:(0,o.jsxs)(r.sl,{children:[(0,o.jsx)("p",{children:"A Kubernetes cluster is a group of interconnected nodes (virtual or physical machines) used to manage, scale, and deploy containerized applications using Kubernetes, an open-source container orchestration platform. The cluster provides a consistent, centralized environment that helps automate the deployment, scaling, and management of containerized applications across multiple nodes."}),(0,o.jsx)("p",{children:"Kubernetes clusters consist of two main components:"}),(0,o.jsx)("p",{children:"Control Plane (Master Node): The control plane is responsible for managing the overall state of the cluster, ensuring that the desired state of the system is maintained. It includes components like the kube-apiserver, etcd datastore, kube-controller-manager, and kube-scheduler. These components work together to orchestrate the various tasks necessary to keep the cluster running smoothly."}),(0,o.jsx)("p",{children:"Worker Nodes: Worker nodes are the machines where containerized applications are deployed, managed, and scaled. Each worker node runs a container runtime (e.g., Docker) and the Kubernetes agent called the kubelet. The kubelet communicates with the control plane to ensure the right containers are running on each node, and it manages the lifecycle of containers on the worker node. Worker nodes also run the kube-proxy, which is responsible for managing network communication between the containers and external clients."}),(0,o.jsx)("p",{children:"Kubernetes clusters provide a range of benefits, such as:"}),(0,o.jsx)("p",{children:"High availability: Kubernetes can detect when a container or node fails and automatically reschedule the affected workloads to other healthy nodes, ensuring that applications remain highly available."}),(0,o.jsx)("p",{children:"Scalability: Kubernetes makes it easy to scale applications by adding or removing containers based on demand, ensuring that resources are used efficiently."}),(0,o.jsx)("p",{children:"Load balancing: Kubernetes can distribute incoming network traffic across multiple containers or nodes, ensuring that no single node becomes a bottleneck and improving the overall performance of the system."}),(0,o.jsx)("p",{children:"Rolling updates and rollbacks: Kubernetes enables you to update applications without downtime by gradually rolling out changes across the cluster. If a problem is detected, it can also automatically roll back the changes to a previous version."}),(0,o.jsx)("p",{children:"Self-healing: Kubernetes can automatically restart failed containers, reschedule them to other nodes, or replace them with new containers, ensuring that applications continue running without manual intervention."})]})})})]})})}},81694:function(e,n){var t;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e=[],n=0;n<arguments.length;n++){var t=arguments[n];if(t){var o=typeof t;if("string"===o||"number"===o)e.push(t);else if(Array.isArray(t)){if(t.length){var s=a.apply(null,t);s&&e.push(s)}}else if("object"===o){if(t.toString!==Object.prototype.toString&&!t.toString.toString().includes("[native code]")){e.push(t.toString());continue}for(var i in t)r.call(t,i)&&t[i]&&e.push(i)}}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(t=function(){return a}.apply(n,[]))||(e.exports=t)}()}}]);
//# sourceMappingURL=6805.4a834d5d.chunk.js.map