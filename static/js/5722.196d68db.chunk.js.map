{"version":3,"file":"static/js/5722.196d68db.chunk.js","mappings":"kQA0BMA,EAAS,CACb,CAAEC,IAAK,WAAYC,MAAO,WAAYC,OAAQ,CAAEC,MAAO,QACvD,CAAEH,IAAK,qBAAsBC,MAAO,cAAeC,OAAQ,CAAEC,MAAO,QACpE,CAAEH,IAAK,sBAAuBC,MAAO,wBAAyBC,OAAQ,CAAEC,MAAO,QAC/E,CAAEH,IAAK,gBAAiBC,MAAO,oBAAqBC,OAAQ,CAAEC,MAAO,QACrE,CAAEH,IAAK,UAAWC,MAAO,UAAWC,OAAQ,CAAEC,MAAO,QACrD,CAAEH,IAAK,UAAWC,MAAO,WAAYC,OAAQ,CAAEC,MAAO,QACtD,CAAEH,IAAK,UAAWC,MAAO,WAAYC,OAAQ,CAAEC,MAAO,SAwDxD,UArDkB,WAEhB,IAAQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OACRG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAChBI,EAAS,mDAAqDT,EAuBlE,OArBAU,EAAAA,EAAAA,YAAU,WACRC,MAAMF,GACLG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAC9BF,MAAK,SAAAG,GACJ,IAAMC,EAAgBD,EAAYE,KAAI,SAAAC,GACpC,MAAO,CACLC,SAAUD,EAAKC,SACfC,mBAAoBF,EAAKG,WAAWD,mBACpCE,oBAAqBJ,EAAKG,WAAWE,OAAOD,oBAC5CE,cAAeN,EAAKG,WAAWI,QAAQD,cACvCE,QAASR,EAAKG,WAAWK,QACzBC,QAAST,EAAKU,IAAIC,KAClBC,QAASZ,EAAKU,IAAIG,KAEtB,IACAvB,EAAQQ,EACV,IACCgB,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,EAAM,GAElD,GAAG,KAGDE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,MAAO9B,EACPZ,OAAQA,EACR2C,SAAO,EACPC,aAAc,EACdC,YAAU,EACVC,OAAK,EACLC,QAAM,EACNC,UAAU,eAAcC,UAExBT,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAD,UACTE,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAH,SAAA,EACRT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,cAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,mBAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,2BAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,uBAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,aAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,UAC9BT,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKL,SAAC,eAKxC,C","sources":["views/base/accordion/Accordion.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTab,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableBody,\n  CTableDataCell\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\nimport UserContext from 'src/UserContext'\nimport '../accordion/accordion-style.css'\n\nconst fields = [\n  { key: 'location', label: 'Location', _style: { width: '10%'} },\n  { key: 'administratorLogin', label: 'Admin Login', _style: { width: '15%'} },\n  { key: 'backupRetentionDays', label: 'Backup Retention Days', _style: { width: '15%'} },\n  { key: 'storageSizeGB', label: 'Storage Size (GB)', _style: { width: '15%'} },\n  { key: 'version', label: 'Version', _style: { width: '10%'} },\n  { key: 'skuName', label: 'SKU Name', _style: { width: '20%'} },\n  { key: 'skuTier', label: 'SKU Tier', _style: { width: '15%'} },\n];\n\nconst Accordion = () => {\n\n  const { userID } = useContext(UserContext)\n  const [data, setData] = useState([]);\n  let apiUrl = 'http://localhost:7070/database/getdatabaseazure/' + userID\n\n  useEffect(() => {\n    fetch(apiUrl)\n    .then(response => response.json())\n      .then(fetchedData => {\n        const flattenedData = fetchedData.map(item => {\n          return {\n            location: item.location,\n            administratorLogin: item.properties.administratorLogin,\n            backupRetentionDays: item.properties.backup.backupRetentionDays,\n            storageSizeGB: item.properties.storage.storageSizeGB,\n            version: item.properties.version,\n            skuName: item.sku.name,\n            skuTier: item.sku.tier,\n          };\n        });\n        setData(flattenedData);\n      })\n      .catch(error => console.error('Error:', error));\n\n  }, []);\n\n  return (\n    <CTable\n      items={data}\n      fields={fields}\n      striped\n      itemsPerPage={5}\n      pagination\n      hover\n      sorter\n      className=\"styled-table\"\n    >\n      <CTableHead>\n        <CTableRow>\n          <CTableHeaderCell scope=\"col\">Location</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Administrator</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Backup Retention Days</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Storage Size (GB)</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Version</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n          <CTableHeaderCell scope=\"col\">Tier</CTableHeaderCell>\n        </CTableRow>\n      </CTableHead>\n    </CTable>\n  )\n}\n\nexport default Accordion\n"],"names":["fields","key","label","_style","width","userID","useContext","UserContext","_useState","useState","_useState2","_slicedToArray","data","setData","apiUrl","useEffect","fetch","then","response","json","fetchedData","flattenedData","map","item","location","administratorLogin","properties","backupRetentionDays","backup","storageSizeGB","storage","version","skuName","sku","name","skuTier","tier","catch","error","console","_jsx","CTable","items","striped","itemsPerPage","pagination","hover","sorter","className","children","CTableHead","_jsxs","CTableRow","CTableHeaderCell","scope"],"sourceRoot":""}