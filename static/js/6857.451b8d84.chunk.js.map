{"version":3,"file":"static/js/6857.451b8d84.chunk.js","mappings":"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","sources":["views/base/cards/Cards.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CInputGroup,\n  CFormInput,\n  CFormSelect,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CModalHeader,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\nimport UserContext from 'src/UserContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Cards = () => {\n  const [resourceGroup, setResourceGroup] = useState('');\n  const [location, setLocation] = useState('');\n  const [serverName, setServerName] = useState('');\n  const [adminName, setAdminName] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n  const [version, setVersion] = useState('');\n  const [visible, setVisible] = useState(false)\n  const [delModal, setDelModal] = useState(false);\n  const { userID } = useContext(UserContext)\n  let navigate = useNavigate();\n  const handleCreateDatabase =  () => {\n    const formData = {\n      resourceGroup,\n      location,\n      serverName,\n      adminName,\n      adminPassword,\n      version\n    };\n\n  fetch('http://localhost:7070/database/createdatabaseazure/' + userID, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(response => {\n      if(response.ok) {  // HTTP status kodu 200-299 arasında ise\n        setVisible(!visible)\n        return response.json(); // json veriyi döndür ve sonraki then bloğuna geç.\n      } else {\n        console.log(\"olmadi\")\n      }\n      })\n      .then(data => {\n        console.log(data)\n          // Burada \"data\" nesnesi ile istediğiniz işlemi yapabilirsiniz.\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleDeleteDatabase = () => {\n    const formData = {\n      resourceGroup,\n      serverName\n    };\n\n    fetch('http://localhost:7070/database/deletedatabaseazure/' + userID, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Handle response data\n        console.log(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n  const handleModal = () => {\n    setVisible(false);\n    navigate('/base/accordion');\n  };\n  const handleDelModal = () => {\n    handleDeleteDatabase();\n    setDelModal(false);\n    navigate('/base/accordion');\n   };\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Create Azure Database</strong>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"forms/input-group\">\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Resource Group\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={resourceGroup}\n                  onChange={(e) => setResourceGroup(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Location\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={location}\n                  onChange={(e) => setLocation(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Server Name\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={serverName}\n                  onChange={(e) => setServerName(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Admin Name\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={adminName}\n                  onChange={(e) => setAdminName(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  type=\"Password\"\n                  placeholder=\"Admin Password\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={adminPassword}\n                  onChange={(e) => setAdminPassword(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormSelect id=\"inputGroupSelect02\" value={version} onChange={(e) => setVersion(e.target.value)}>\n                  <option>Choose your version</option>\n                  <option value=\"11\">11</option>\n                </CFormSelect>\n                <CInputGroupText component=\"label\" htmlFor=\"inputGroupSelect02\">\n                  Versions\n                </CInputGroupText>\n              </CInputGroup>\n              <CButton onClick={handleCreateDatabase}>Create</CButton>\n              <CModal visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                  <CModalTitle>Successfully</CModalTitle>\n                </CModalHeader>\n                <CModalBody>Database Successfully Created !</CModalBody>\n                <CModalFooter>\n                  <CButton color='secondary' onClick={handleModal}>\n                    Go AWS Database List\n                  </CButton>\n                </CModalFooter>\n              </CModal>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Delete Azure Database</strong>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"forms/input-group\">\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Resource Group\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={resourceGroup}\n                  onChange={(e) => setResourceGroup(e.target.value)}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormInput\n                  placeholder=\"Server Name\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  value={serverName}\n                  onChange={(e) => setServerName(e.target.value)}\n                />\n              </CInputGroup>\n              <CButton onClick={() => setDelModal(true)}>Delete</CButton>\n              <CModal visible={delModal} onClose={() => setDelModal(false)}>\n                <CModalHeader onClose={() => setDelModal(false)}>\n                  <CModalTitle>Warning</CModalTitle>\n                </CModalHeader>\n                <CModalBody>Do you want to delete your database ?</CModalBody>\n                <CModalFooter>\n                  <CButton color='danger' onClick={handleDelModal}>\n                    Delete\n                  </CButton>\n                  <CButton color='secondary' onClick={() => setDelModal(false)}>\n                    Cancel\n                  </CButton>\n                </CModalFooter>\n              </CModal>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Cards\n"],"names":["_useState","useState","_useState2","_slicedToArray","resourceGroup","setResourceGroup","_useState3","_useState4","location","setLocation","_useState5","_useState6","serverName","setServerName","_useState7","_useState8","adminName","setAdminName","_useState9","_useState10","adminPassword","setAdminPassword","_useState11","_useState12","version","setVersion","_useState13","_useState14","visible","setVisible","_useState15","_useState16","delModal","setDelModal","userID","useContext","UserContext","navigate","useNavigate","_jsx","CRow","children","_jsxs","CCol","xs","CCard","className","CCardHeader","CCardBody","DocsExample","href","CInputGroup","CFormInput","placeholder","value","onChange","e","target","type","CFormSelect","id","CInputGroupText","component","htmlFor","CButton","onClick","formData","fetch","method","headers","body","JSON","stringify","then","response","ok","json","console","log","data","catch","error","CModal","onClose","CModalHeader","CModalTitle","CModalBody","CModalFooter","color","handleDeleteDatabase"],"sourceRoot":""}